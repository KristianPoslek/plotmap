plugins {
    id 'org.springframework.boot' version '2.1.5.RELEASE'
    id 'com.moowork.node' version '1.2.0'
    id 'java'
    id 'war'
}

apply plugin: 'io.spring.dependency-management'

group = 'com.poslek'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation(
            'org.springframework.boot:spring-boot-starter-data-jpa',
            'org.springframework.boot:spring-boot-starter-web'
    )
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.h2database:h2'
    annotationProcessor 'org.projectlombok:lombok'
    providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

node {
    version = '10.15.3'
    npmVersion = '6.4.1'
    distBaseUrl = 'https://nodejs.org/dist'
    download = true
    workDir = file("${project.buildDir}/nodejs")
    npmWorkDir = file("${project.buildDir}/npm")

    nodeModulesDir = file("${project.projectDir}/../../frontend")
}

task devBuild(type: NpmTask, dependsOn: npmInstall) {
    args = ['run', 'build:dev']
}

task frontend(type: Copy) {
    if (!project.hasProperty('skipFrontend')) {
        if (project.hasProperty('devFrontend')) {
            dependsOn devBuild
        } else {
            dependsOn npm_run_build
            dependsOn npm_run_lint
        }

        from '../../frontend/dist/plotmap'
        into 'build/resources/main/static/'
    }
}

bootRun.configure {
    dependsOn frontend
}
bootWar.dependsOn frontend